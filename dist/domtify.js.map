{"version":3,"file":"domtify.js","sources":["../src/utils/index.js","../src/core.js","../src/ext/each.js","../src/ext/addClass.js","../src/ext/map.js","../src/ext/filter.js","../src/ext/eq.js","../src/ext/first.js","../src/ext/last.js","../src/ext/get.js","../src/utils/sanitize.js","../src/utils/domManip.js","../src/ext/append.js","../src/ext/extend.js","../src/ext/clone.js","../src/ext/add.js","../src/ext/prepend.js","../src/ext/after.js","../src/ext/before.js","../src/ext/replaceWith.js","../src/utils/getSibling.js","../src/ext/next.js","../src/ext/prev.js","../src/ext/prevAll.js","../src/ext/prevUntil.js","../src/ext/is.js"],"sourcesContent":["const isElem = (el) => el instanceof Element\r\n\r\n//用于判断一个对象是否是纯粹的 JavaScript 对象（即不是 DOM 对象、函数、数组等）。具体作用是检查对象是否通过对象字面量或 new Object() 创建，且其原型链上只包含标准的 Object 原型\r\nconst isPlainObject = (obj) => {\r\n  if (typeof obj !== 'object' || obj === null || obj instanceof Array) {\r\n    return false\r\n  }\r\n  const prototype = Object.getPrototypeOf(obj)\r\n  return prototype === Object.prototype || prototype === null\r\n}\r\n\r\nconst isString = (value) => {\r\n  return typeof value === 'string'\r\n}\r\n\r\nconst isHtmlString = (str) => {\r\n  return str.trim().startsWith('<')\r\n}\r\n\r\nconst isFunction = (value) => {\r\n  return typeof value === 'function'\r\n}\r\n\r\nconst isArray = (value) => {\r\n  return Array.isArray(value)\r\n}\r\n\r\nconst isInstance = (obj, cls) => {\r\n  return obj instanceof cls\r\n}\r\n\r\nconst arrUnique = (arr) => [...new Set(arr)]\r\n\r\nconst isInPage = (node) => {\r\n  return node === document.body ? false : document.body.contains(node)\r\n}\r\n\r\nexport {\r\n  isInPage,\r\n  isArray,\r\n  arrUnique,\r\n  isInstance,\r\n  isFunction,\r\n  isString,\r\n  isHtmlString,\r\n  isElem,\r\n  isPlainObject,\r\n}\r\n","import { isString, isHtmlString, isInstance } from './utils'\r\n\r\nclass Domtify {\r\n  result = []\r\n\r\n  get length() {\r\n    return this.result.length\r\n  }\r\n\r\n  constructor(selector, context) {\r\n    // 如果已经是实例，无需处理直接返回\r\n    if (selector instanceof Domtify) {\r\n      return selector\r\n    }\r\n    // 字符串处理\r\n    else if (isString(selector)) {\r\n      if (isHtmlString(selector)) {\r\n        //html字符串就直接创建\r\n        const div = document.createElement('div')\r\n        div.insertAdjacentHTML('beforeend', selector)\r\n        this.result = [div.firstChild]\r\n      } else {\r\n        //选择器字符串\r\n        this.result = Array.from(\r\n          (context || document).querySelectorAll(selector),\r\n        )\r\n      }\r\n    } else if (\r\n      isInstance(selector, NodeList) ||\r\n      isInstance(selector, HTMLCollection)\r\n    ) {\r\n      //是直接传递的NodeList或者HTMLCollection集合\r\n      this.result = Array.from(selector)\r\n    } else if (Array.isArray(selector)) {\r\n      //是数组直接替换\r\n      this.result = selector\r\n    } else {\r\n      this.result = selector ? [selector] : []\r\n    }\r\n  }\r\n}\r\n\r\n//类的原型\r\nconst fn = Domtify.prototype\r\n\r\n//构造函数domtify\r\nconst domtify = (selector, context) => new Domtify(selector, context)\r\n\r\n//把类原型赋值给构造函数的原型，最后再赋值给构造函数domtify的fn属性，在js中，函数也是一种特殊的对象，因此也可以拥有属性。\r\ndomtify.fn = domtify.prototype = fn\r\n\r\nexport { domtify, domtify as d, fn, Domtify }\r\n","import { fn } from '../core'\r\n\r\nfn.each = function (callback) {\r\n  this.result.forEach(function (element, index, array) {\r\n    callback.call(element, element, index, array)\r\n  })\r\n  return this\r\n}\r\n","import { fn } from '../core'\r\nimport { isArray, isFunction, isString, isElem } from '../utils'\r\n\r\nimport './each'\r\n\r\nfn.addClass = function (className) {\r\n  const list = (res) =>\r\n    isArray(res) ? res : isString(res) ? res.split(' ') : []\r\n\r\n  let classList = []\r\n\r\n  return this.each((item, index) => {\r\n    // 处理函数返回值\r\n    if (isFunction(className)) {\r\n      classList = list(\r\n        className.call(item, index, isElem(item) ? item.classList.value : item),\r\n      )\r\n    } else {\r\n      classList = list(className)\r\n    }\r\n\r\n    item?.classList?.add(...classList)\r\n  })\r\n}\r\n","import { fn } from '../core'\r\n\r\nfn.map = function (callback) {\r\n  this.result = this.result.map((element, index, array) =>\r\n    callback.call(element, element, index, array),\r\n  )\r\n  return this\r\n}\r\n","import { fn, domtify } from '../core'\r\n\r\n\r\n\r\nfn.filter = function (selector) {\r\n\r\n  //默认是选择器\r\n  let callbackFn = (index, item) => item?.matches(selector || '*')\r\n\r\n  //函数\r\n  if (typeof selector === 'function') callbackFn = selector\r\n\r\n  //domtify实例\r\n  if (selector instanceof domtify) {\r\n\r\n    callbackFn = (index, item) => selector.result.indexOf(item) !== -1\r\n\r\n  }\r\n\r\n  //element元素\r\n  if (selector instanceof Element) {\r\n    callbackFn = (index, item) => this.result.indexOf(selector) !== -1\r\n  }\r\n\r\n  //调用数组原生的filter过滤\r\n  this.result = this.result.filter((item, index) => callbackFn.call(item, index, item))\r\n\r\n  return this\r\n}\r\n","import { fn } from '../core'\r\n\r\nfn.eq = function (index) {\r\n  this.result = [this.result.at(index)]\r\n  return this\r\n}\r\n","import { fn } from '../core'\r\n\r\nimport './eq'\r\n\r\nfn.first = function () {\r\n  return this.eq(0)\r\n}\r\n","import { fn } from '../core'\r\nimport './eq'\r\n\r\nfn.last = function () {\r\n  return this.eq(-1)\r\n}\r\n","import { fn } from '../core'\r\n\r\nfn.get = function (index) {\r\n  return Number.isInteger(index) ? this.result.at(index) : this.result\r\n}\r\n","import { Domtify } from '../core'\r\n\r\n//参数消毒\r\nconst sanitize = (args) => {\r\n  const uniqueMap = new Map()\r\n  return (Array.isArray(args) ? args : [args]) //不是数组转换成数组\r\n    .flat(Infinity)\r\n    .flatMap((item) => {\r\n      if (item instanceof Domtify) {\r\n        return item.result\r\n      }\r\n      if (item instanceof NodeList || item instanceof HTMLCollection) {\r\n        return Array.from(item)\r\n      }\r\n      return item\r\n    })\r\n    .filter((item) => {\r\n      if (item instanceof Element) {\r\n        //不允许重复的Element\r\n        if (!uniqueMap.has(item)) {\r\n          uniqueMap.set(item, true)\r\n          return true\r\n        } else {\r\n          return false\r\n        }\r\n      }\r\n      if (item === null || typeof item === 'number') {\r\n        //null也删除\r\n        return false\r\n      }\r\n      return true\r\n    })\r\n}\r\n\r\nexport default sanitize\r\n","import { isString, isHtmlString, isFunction, isElem } from '../utils'\r\n\r\nimport sanitize from './sanitize'\r\nimport '../ext/each'\r\n\r\nconst Default = {\r\n  //是否反转参数\r\n  reverse: false,\r\n  //是否克隆\r\n  cloneNode: true,\r\n}\r\n\r\nconst createHtmlNode = (htmlStr) => {\r\n  const div = document.createElement('div')\r\n  div.innerHTML = htmlStr\r\n  return div.firstElementChild\r\n}\r\n\r\n//collection就是domtify实例\r\nexport const domManip = (collection, args, callback, options) => {\r\n  //参数合并\r\n  options = {\r\n    ...Default,\r\n    ...options,\r\n  }\r\n\r\n  //参数静态化不过不这样的话，如果是HTMLCollection如果动态添加后，在遍历的时候它数组长度会改变，遍历逻辑会错乱\r\n  let firstParam = args[0]\r\n  let firstParamIsFunction = isFunction(firstParam)\r\n  let fnResult = {}\r\n\r\n  if (firstParamIsFunction) {\r\n    collection.each((item, index) => {\r\n      fnResult[index] = sanitize(firstParam.call(item, index, item.textContent))\r\n    })\r\n  }\r\n  Object.freeze(fnResult) //冻结该对象防止被更改\r\n\r\n  let flatArgs = sanitize(args)\r\n  if (options.reverse) {\r\n    flatArgs = flatArgs.reverse()\r\n  }\r\n\r\n  let last = false\r\n  return collection.each((elem, index) => {\r\n    if (firstParamIsFunction) {\r\n      flatArgs = fnResult[index] //这里就表示直接取上面函数的静态化参数了\r\n      if (options.reverse) {\r\n        flatArgs = flatArgs.reverse()\r\n      }\r\n    }\r\n\r\n    last = index === collection.length - 1 ? true : false\r\n\r\n    //参数遍历\r\n    flatArgs.forEach((item) => {\r\n      //回调的参数\r\n      let node\r\n      //1.字符串\r\n      if (isString(item)) {\r\n        if (isHtmlString(item)) {\r\n          //创建dom\r\n          //htmlString\r\n          node = createHtmlNode(item)\r\n        } else {\r\n          //textNode\r\n          node = document.createTextNode(item)\r\n        }\r\n      } else if (isElem(item) || item instanceof Text) {\r\n        //如果克隆选项启用，且是最后一个才进行克隆\r\n        node = options.cloneNode && !last ? item.cloneNode(true) : item\r\n      }\r\n      //调用方法\r\n      callback.call(elem, node)\r\n    })\r\n  })\r\n}\r\n","import { fn } from '../core'\r\nimport { domManip } from '../utils/domManip'\r\n\r\nfn.append = function (...args) {\r\n  return domManip(this, args, function (node) {\r\n    this.appendChild(node)\r\n  })\r\n}\r\n","import { domtify } from '../core'\r\n\r\nimport { isPlainObject } from '../utils'\r\n\r\ndomtify.extend = function () {\r\n  let options,\r\n    name,\r\n    src,\r\n    copy,\r\n    copyIsArray,\r\n    clone,\r\n    target = arguments[0] || {}, //第一个参数\r\n    i = 1,\r\n    length = arguments.length,\r\n    deep = false\r\n\r\n  // 处理深度复制情况\r\n  if (typeof target === 'boolean') {\r\n    deep = target\r\n\r\n    // 跳过布尔值和目标\r\n    target = arguments[i] || {}\r\n    i++\r\n  }\r\n\r\n  // 当目标是字符串或其他东西时处理大小写（可能在深度复制中）\r\n  if (typeof target !== 'object' && typeof target !== 'function') {\r\n    target = {}\r\n  }\r\n\r\n  // 如果只传递一个参数，则扩展jQuery本身\r\n  if (i === length) {\r\n    target = this\r\n    i--\r\n  }\r\n\r\n  for (; i < length; i++) {\r\n    // 仅处理非null/未定义的值\r\n    if ((options = arguments[i]) != null) {\r\n      // 延伸基础对象\r\n      for (name in options) {\r\n        copy = options[name]\r\n        // 防止Object.prototype污染\r\n        // 防止无休止的循环\r\n        if (name === '__proto__' || target === copy) {\r\n          continue\r\n        }\r\n\r\n        // 如果我们正在合并普通对象或数组，则重复出现\r\n        if (\r\n          deep &&\r\n          copy &&\r\n          (isPlainObject(copy) || (copyIsArray = Array.isArray(copy)))\r\n        ) {\r\n          src = target[name]\r\n\r\n          // 确保源值的类型正确\r\n          if (copyIsArray && !Array.isArray(src)) {\r\n            clone = []\r\n          } else if (!copyIsArray && !isPlainObject(src)) {\r\n            clone = {}\r\n          } else {\r\n            clone = src\r\n          }\r\n          copyIsArray = false\r\n\r\n          // 从不移动原始对象，而是克隆它们\r\n          target[name] = this.extend(deep, clone, copy)\r\n\r\n          // 不要引入未定义的值\r\n          // } else if (copy !== undefined) {\r\n        } else {\r\n          target[name] = copy\r\n        }\r\n      }\r\n    }\r\n  }\r\n  // 返回修改后的对象\r\n  return target\r\n}\r\n","import { fn } from '../core'\r\nimport './each'\r\n\r\nfn.clone = function () {\r\n  return this.map((item) => item?.cloneNode(true))\r\n}\r\n","import { fn, domtify } from '../core'\r\nimport { arrUnique } from '../utils'\r\nimport './each'\r\nimport './get'\r\n\r\nfn.add = function (selector, context) {\r\n  return domtify(\r\n    arrUnique([...this.get(), ...domtify(selector, context).get()]),\r\n  )\r\n}\r\n","import { fn } from '../core'\r\n\r\nimport { domManip } from '../utils/domManip'\r\n\r\nfn.prepend = function (...args) {\r\n  return domManip(\r\n    this,\r\n    args,\r\n    function (node) {\r\n      this.insertBefore(node, this.firstChild)\r\n    },\r\n    {\r\n      reverse: true,\r\n    },\r\n  )\r\n}\r\n","import { fn } from '../core'\r\nimport { domManip } from '../utils/domManip'\r\n\r\nfn.after = function (...args) {\r\n  return domManip(\r\n    this,\r\n    args,\r\n    function (node) {\r\n      if (this.parentNode) {\r\n        this.parentNode.insertBefore(node, this.nextSibling)\r\n      }\r\n    },\r\n    {\r\n      reverse: true,\r\n    },\r\n  )\r\n}\r\n","import { fn } from '../core'\r\nimport { domManip } from '../utils/domManip'\r\n\r\nfn.before = function (...args) {\r\n  return domManip(\r\n    this,\r\n    args,\r\n    function (node) {\r\n      if (this.parentNode) {\r\n        this.parentNode.insertBefore(node, this)\r\n      }\r\n    },\r\n    {\r\n      reverse: true,\r\n    },\r\n  )\r\n}\r\n","import { fn } from '../core'\r\nimport { domManip } from '../utils/domManip'\r\n\r\nfn.replaceWith = function (...args) {\r\n  return domManip(\r\n    this,\r\n    args,\r\n    function (node) {\r\n      const parent = this.parentNode\r\n      if (parent) {\r\n        parent.replaceChild(node, this)\r\n      }\r\n    },\r\n    {\r\n      cloneNode: false,\r\n    },\r\n  )\r\n}\r\n","\r\nconst getSibling = (cur, dir) => {\r\n    // 根据方向获取下一个或上一个兄弟节点\r\n    cur = cur[dir];\r\n    // 如果存在兄弟节点且兄弟节点的节点类型不是元素节点，则继续向下一个兄弟节点移动\r\n    while (cur && cur.nodeType !== 1) {\r\n        cur = cur[dir];\r\n    }\r\n    // 返回找到的兄弟节点（或者是 null）\r\n    return cur;\r\n}\r\n\r\n\r\nexport default getSibling\r\n","import { fn } from '../core'\r\nimport getSibling from '../utils/getSibling'\r\n\r\n\r\nimport './map'\r\nimport './filter'\r\n\r\n\r\nfn.next = function (selector) {\r\n    return this.map((item) => {\r\n        return getSibling(item, 'nextSibling')\r\n    }).filter(selector)\r\n}\r\n","import { fn } from '../core'\r\nimport getSibling from '../utils/getSibling'\r\n\r\n\r\nimport './map'\r\nimport './filter'\r\n\r\n\r\nfn.prev = function (selector) {\r\n    return this.map((item) => {\r\n        return getSibling(item, 'previousSibling')\r\n    }).filter(selector)\r\n}\r\n","import { fn } from '../core'\r\nimport getSibling from '../utils/getSibling'\r\n\r\n\r\nimport './map'\r\nimport './filter'\r\n\r\n\r\nfn.prevAll = function () {\r\n\r\n    return this.map((item) => {\r\n        return getSibling(item, 'previousSibling')\r\n    }).filter(selector)\r\n\r\n    \r\n}\r\n","import { fn } from '../core'\r\nimport getSibling from '../utils/getSibling'\r\n\r\n\r\nimport './map'\r\nimport './filter'\r\n\r\n\r\nfn.prevUntil = function () {\r\n\r\n\r\n    return this.map((item) => {\r\n        return getSibling(item, 'previousSibling')\r\n    }).filter(selector)\r\n\r\n    \r\n}\r\n","import { fn } from '../core'\r\n\r\n\r\nimport './filter'\r\n\r\nfn.is = function (selector) {\r\n    return this.filter(selector).length > 0;\r\n}"],"names":["isElem","el","Element","isPlainObject","obj","Array","prototype","Object","getPrototypeOf","isString","value","isHtmlString","str","trim","startsWith","isFunction","isArray","isInstance","cls","arrUnique","arr","Set","Domtify","length","result","constructor","selector","context","div","document","createElement","insertAdjacentHTML","firstChild","from","querySelectorAll","NodeList","HTMLCollection","fn","domtify","each","callback","forEach","element","index","array","call","addClass","className","list","res","split","classList","item","_item$classList","add","map","filter","callbackFn","matches","indexOf","eq","at","first","last","get","Number","isInteger","sanitize","args","uniqueMap","Map","flat","Infinity","flatMap","has","set","Default","reverse","cloneNode","createHtmlNode","htmlStr","innerHTML","firstElementChild","domManip","collection","options","firstParam","firstParamIsFunction","fnResult","textContent","freeze","flatArgs","elem","node","createTextNode","Text","append","appendChild","extend","name","src","copy","copyIsArray","clone","target","arguments","i","deep","prepend","insertBefore","after","parentNode","nextSibling","before","replaceWith","parent","replaceChild","getSibling","cur","dir","nodeType","next","prev","prevAll","prevUntil","is"],"mappings":"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"}